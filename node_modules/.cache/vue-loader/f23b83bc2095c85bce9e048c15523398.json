{"remainingRequest":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project2\\project-allocation-web\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project2\\project-allocation-web\\src\\views\\Login.vue","mtime":1623142371009},{"path":"E:\\project2\\project-allocation-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubG9naW4tcGFnZSB7DQogICAgbWluLWhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAzMzQ0Ow0KICAgIC51c3lkLWxvZ28gew0KICAgICAgICB3aWR0aDogODAlOw0KICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICAgIH0NCiAgICAuZXJyb3Itd3JhcHBlciB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4ODAwMDA7DQogICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICBsaW5lLWhlaWdodDogMi41Ow0KICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgM3B4IDNweDsNCiAgICB9DQogICAgLmZvcm0tY29udGFpbmVyIHsNCiAgICAgICAgd2lkdGg6IDUyMHB4Ow0KICAgICAgICBtYXJnaW46IDAgYXV0bzsNCiAgICAgICAgcGFkZGluZzogMjAwcHggMzVweCAwOw0KICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgfQ0KICAgIC5pbnB1dC1jb250YWluZXIgew0KICAgICAgICB3aWR0aDogODAlOw0KICAgICAgICBtYXJnaW46MCBhdXRvIDIwcHg7DQogICAgICAgIC5pbnB1dC1maWVsZCB7DQogICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAubG9naW4taW5wdXQgew0KDQogICAgfQ0KICAgIC5sb2dpbi1idXR0b24gew0KICAgICAgICB3aWR0aDogODAlOw0KICAgICAgICBtYXJnaW4tdG9wOiAxNXB4Ow0KICAgIH0NCiAgICAuZW1haWwtaW5wdXQgew0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"login-page\">\r\n        <div class=\"form-container\">\r\n            <img src=\"../assets/usyd-logo.png\" alt=\"\" class=\"usyd-logo\">\r\n            <div class=\"input-container\">\r\n                <div class=\"input-field\">Email</div>\r\n                <el-input\r\n                    placeholder=\"email\"\r\n                    v-model=\"email\"\r\n                    class=\"login-input email-input\"\r\n                    @input=\"clearError('email')\"\r\n                    @keyup.enter.native=\"login\"\r\n                    clearable>\r\n                </el-input>\r\n                <div class=\"error-wrapper email-error\" v-show=\"error.email.isShow\">{{error.email.message}}</div>\r\n            </div>\r\n            <div class=\"input-container\">\r\n                <div class=\"input-field\">Password</div>\r\n                <el-input\r\n                    placeholder=\"password\"\r\n                    v-model=\"password\"\r\n                    class=\"login-input password-input\"\r\n                    @keyup.enter.native=\"login\"\r\n                    @input=\"clearError('password')\"\r\n                    show-password>\r\n                </el-input>\r\n                <div class=\"error-wrapper email-error\" v-show=\"error.password.isShow\">{{error.password.message}}</div>\r\n            </div>\r\n            <el-button type=\"primary\" class=\"login-button\" @click=\"login\">Login</el-button>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport loginApi from '@/api/login'\r\nimport CONSTANTS from '@/utils/constants'\r\nimport cookies from 'js-cookie'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n            error: {\r\n                email: {\r\n                    isShow: false,\r\n                    message: 'Email cannot be empty'\r\n                },\r\n                password: {\r\n                    isShow: false,\r\n                    message: 'Password cannot be empty'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            let loginData = {\r\n                email: this.email,\r\n                password: this.password\r\n            }\r\n            \r\n            if (this.validateBeforeLogin()) {\r\n                loginApi.login(loginData).then(response => {\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.SUCCESS) {\r\n                        let token = response.data.token\r\n                        // TODO\r\n                        cookies.set('token', token)\r\n                        loginApi.getAdminInfo().then(response => {\r\n                            debugger\r\n                            cookies.set('admin', JSON.stringify(response.data.admin))\r\n                            let currentAdmin = response.data.admin\r\n                            this.$store.dispatch('user/login', {token, currentAdmin})\r\n                            // TODO\r\n                            // change /admin\r\n                            this.$router.push('/home/index')\r\n                        })\r\n                        return\r\n                    }\r\n    \r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.EMAIL_NOT_EXIST) {\r\n                        this.error.email.message = 'Email not exist'\r\n                        this.error.email.isShow = true\r\n                        return\r\n                    }\r\n\r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.ERROR_PASSWORD) {\r\n                        this.error.password.message = 'Passowrd not correct'\r\n                        this.error.password.isShow = true\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        validateBeforeLogin() {\r\n            if (this.email.trim() == '') {\r\n                this.error.email.message = 'Email cannot be empty'\r\n                this.error.email.isShow = true\r\n                return false\r\n            }\r\n\r\n            let email_reg = new RegExp(CONSTANTS.REG.EMAIL_REG)\r\n            if (!email_reg.test(this.email)) {\r\n                this.error.email.message = 'Email format error'\r\n                this.error.email.isShow = true\r\n                return false\r\n            }\r\n\r\n            if (this.password == '') {\r\n                this.error.email.message = 'Password cannot be empty'\r\n                this.error.password.isShow = true\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n        clearError(label) {\r\n            this.error[label].isShow = false\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-page {\r\n    min-height: 100%;\r\n    width: 100%;\r\n    background-color: #003344;\r\n    .usyd-logo {\r\n        width: 80%;\r\n        margin-bottom: 20px;\r\n    }\r\n    .error-wrapper {\r\n        background-color: #880000;\r\n        color: white;\r\n        font-size: 14px;\r\n        line-height: 2.5;\r\n        border-radius: 0 0 3px 3px;\r\n    }\r\n    .form-container {\r\n        width: 520px;\r\n        margin: 0 auto;\r\n        padding: 200px 35px 0;\r\n        text-align: center;\r\n    }\r\n    .input-container {\r\n        width: 80%;\r\n        margin:0 auto 20px;\r\n        .input-field {\r\n            color: white;\r\n            text-align: left;\r\n            margin-bottom: 10px;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n    .login-input {\r\n\r\n    }\r\n    .login-button {\r\n        width: 80%;\r\n        margin-top: 15px;\r\n    }\r\n    .email-input {\r\n    }\r\n}\r\n</style>"]}]}