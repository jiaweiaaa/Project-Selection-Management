{"remainingRequest":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project2\\project-allocation-web\\src\\views\\admin\\add\\index.vue?vue&type=style&index=0&id=45d939fa&lang=scss&scoped=true&","dependencies":[{"path":"E:\\project2\\project-allocation-web\\src\\views\\admin\\add\\index.vue","mtime":1623142371012},{"path":"E:\\project2\\project-allocation-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project2\\project-allocation-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5hZGQtYWRtaW4tY29udGFpbmVyIHsNCiAgICBwYWRkaW5nLXRvcDogODBweDsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIGxlZnQ6IDUwJTsNCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7DQogICAgLnJvdyB7DQogICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7DQogICAgICAgIC50aXRsZSB7DQogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4Ow0KICAgICAgICB9DQogICAgICAgIC5yb3ctaW5wdXQgew0KICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgd2lkdGg6IDMwMHB4Ow0KICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICB9DQogICAgICAgIC5lcnJvci1ub3RpZmljYXRpb24gew0KICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgY29sb3I6IHJlZDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgcmlnaHQ6IC0xMHB4Ow0KICAgICAgICAgICAgdG9wOiA1MCU7DQogICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSkgdHJhbnNsYXRlWSgtNTAlKTsNCiAgICAgICAgICAgIC5lbC1pY29uLXdhcm5pbmctb3V0bGluZSB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgLmVsLXNlbGVjdCB7DQogICAgICAgICAgICB3aWR0aDogMzAwcHg7DQogICAgICAgIH0NCiAgICB9DQogICAgLmJ1dHRvbi13cmFwcGVyIHsNCiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7DQogICAgICAgIC5lbC1pY29uLWRlbGV0ZSB7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgICAgICAgICBjb2xvcjogI2NhY2FjYTsNCiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAucmVzZXQtcGFzc3dvcmQtYnRuIHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KfQ0KDQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/add","sourcesContent":["<template>\r\n    <div class=\"add-admin-container\">\r\n        <div class=\"row\">\r\n            <div class=\"title\">Name: </div>\r\n            <div class=\"row-input\">\r\n                <el-input v-model=\"admin.name\" placeholder=\"Name\" @input=\"clearError('name')\"></el-input>\r\n                <div class=\"error-notification\" v-show=\"errors.name.show\">\r\n                    <i class=\"el-icon-warning-outline\"></i>\r\n                    {{errors.name.text}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"title\">Email: </div>\r\n            <div class=\"row-input\">\r\n                <el-input v-model=\"admin.email\" placeholder=\"Email\" v-if=\"admin.id\" :disabled=\"true\"></el-input>\r\n                <el-input v-model=\"admin.email\" placeholder=\"Email\" v-else @input=\"clearError('email')\"></el-input>\r\n                <div class=\"error-notification\" v-show=\"errors.email.show\">\r\n                    <i class=\"el-icon-warning-outline\"></i>\r\n                    {{errors.email.text}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!admin.id\">\r\n            <div class=\"title\">Password: </div>\r\n            <div class=\"row-input\">\r\n                <el-input v-model=\"admin.password\" show-password placeholder=\"Password\" @input=\"clearError('password')\"></el-input>\r\n                <div class=\"error-notification\" v-show=\"errors.password.show\">\r\n                    <i class=\"el-icon-warning-outline\"></i>\r\n                    {{errors.password.text}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!admin.id\">\r\n            <div class=\"title\">Confirmed Password: </div>\r\n            <div class=\"row-input\">\r\n                <el-input v-model=\"admin.confirmedPassword\" show-password placeholder=\"Confirmed Password\" @input=\"clearError('confirmedPassword')\"></el-input>\r\n                <div class=\"error-notification\" v-show=\"errors.confirmedPassword.show\">\r\n                    <i class=\"el-icon-warning-outline\"></i>\r\n                    {{errors.confirmedPassword.text}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"title\">Type: </div>\r\n            <div class=\"row-input\">\r\n                <el-select v-model=\"admin.type\" placeholder=\"Please Select\" @change=\"clearError('type')\">\r\n                    <el-option \r\n                        v-for=\"item in adminTypes\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.value\"\r\n                    >\r\n                    </el-option>\r\n                </el-select>\r\n                <div class=\"error-notification\" v-show=\"errors.type.show\">\r\n                    <i class=\"el-icon-warning-outline\"></i>\r\n                    {{errors.type.text}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"admin.id\">\r\n            <div class=\"title\">Password: </div>\r\n            <div class=\"row-input\">\r\n                <el-button class=\"reset-password-btn\" @click=\"resetAdminPassword\">Reset Password</el-button>\r\n            </div>\r\n        </div>\r\n        <div class=\"button-wrapper\">\r\n            <i class=\"el-icon-delete\" v-if=\"admin.id && currentAdmin.id != admin.id\" @click=\"deleteAdmin(admin.id)\"></i>\r\n            <el-button type=\"danger\" class=\"cancel-button\" @click=\"cancel\">Cancel</el-button>\r\n            <el-button type=\"primary\" class=\"confirm-button\" @click=\"addAdmin\">Confirm</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport adminApi from '@/api/admin'\r\nimport { mapGetters} from 'vuex'\r\nimport CONSTANTS from '@/utils/constants'\r\nexport default {\r\n    data () {\r\n        return {\r\n            admin: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                confirmedPassword: '',\r\n                type: ''\r\n            },\r\n            adminTypes: [\r\n                {\r\n                    value: '0',\r\n                    label: 'Super Admin'\r\n                },\r\n                {\r\n                    value: '1',\r\n                    label: 'Admin'\r\n                }\r\n            ],\r\n            errors: {\r\n                name: {\r\n                    show: false,\r\n                    text: 'Please input name.'\r\n                },\r\n                email: {\r\n                    show: false,\r\n                    text: 'Please input email.'\r\n                },\r\n                password: {\r\n                    show: false,\r\n                    text: 'Please input password.'\r\n                },\r\n                confirmedPassword: {\r\n                    show: false,\r\n                    text: 'Please input confirmed password.'\r\n                },\r\n                type: {\r\n                    show: false,\r\n                    text: 'Please select admin type.'\r\n                }\r\n            },\r\n        }\r\n    },\r\n    created() {\r\n        let id = this.$route.params.id\r\n        if (id) {\r\n            this.admin.id = id\r\n            this.getAdmin(id)\r\n        }\r\n\r\n        console.log(this.currentAdmin.id)\r\n        console.log(this.admin.id)\r\n        console.log(this.currentAdmin.id != this.admin.id)\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            'currentAdmin'\r\n        ])\r\n    },\r\n    methods: {\r\n        resetAdminPassword() {\r\n            this.$confirm('The admin password will be reset as 123456, continue?', 'Confirm', {\r\n                confirmButtonText: 'Confirm',\r\n                cancelButtonText: 'Cancel'\r\n            }).then(() => {\r\n                adminApi.resetAdminPassword(this.admin.id).then(response => {\r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.SUCCESS) {\r\n                        this.$message({\r\n                            message: 'Reset password succeed',\r\n                            type: 'success'\r\n                        })\r\n                    }\r\n                    this.$router.push(\"/admin/list\")\r\n                })\r\n            })\r\n        },\r\n        getAdmin(id) {\r\n            adminApi.getAdmin(id).then((response) => {\r\n                let adminInfo = response.data.admins\r\n                let confirmedPassword = adminInfo.password\r\n                this.admin = {\r\n                    id: adminInfo.id,\r\n                    name: adminInfo.name,\r\n                    email: adminInfo.email,\r\n                    password: adminInfo.password,\r\n                    confirmedPassword: adminInfo.password,\r\n                    type: adminInfo.type \r\n                }\r\n            })\r\n\r\n        },\r\n        deleteAdmin(id) {\r\n            if (id == this.currentAdmin.id) {\r\n                this.$message({\r\n                    message: 'You can not delete yourself.',\r\n                    type: 'error'\r\n                })\r\n            }\r\n\r\n            this.$confirm('Are you sure delete this admin?', 'Confirm', {\r\n                confirmButtonText: 'Confirm',\r\n                cancelButtonText: 'Cancel'\r\n            }).then(() => {\r\n                adminApi.deleteAdmin(id).then(response => {\r\n                    if (response.code == CONSTANTS.RESPONSE_CODE.SUCCESS) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: 'Delete Successfully'\r\n                        })\r\n                        this.$router.push('/admin/list')\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        clearError(errorName) {\r\n            this.errors[errorName].show = false\r\n\r\n            if (errorName == 'password' || errorName == 'confirmedPassword') {\r\n                this.errors.password.show = false\r\n                this.errors.confirmedPassword.show = false\r\n            }\r\n        },\r\n        cancel() {\r\n            this.$router.push('/admin/list')\r\n        },\r\n        validateBeforeAdd() {\r\n            let isPassed = true\r\n\r\n            if (!this.admin.name) {\r\n                this.errors.name.text = 'Please input name.'\r\n                this.errors.name.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            } \r\n\r\n            if (!this.admin.email) {\r\n                this.errors.email.text = 'Please input email.'\r\n                this.errors.email.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            } \r\n\r\n            if (!this.admin.password) {\r\n                this.errors.password.text = 'Please input password.'\r\n                this.errors.password.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            } \r\n\r\n            if (!this.admin.confirmedPassword) {\r\n                this.errors.confirmedPassword.text = 'Please input confirmed Password.'\r\n                this.errors.confirmedPassword.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            } \r\n\r\n            if (!this.admin.type) {\r\n                this.errors.type.text = 'Please select admin type.'\r\n                this.errors.type.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            } \r\n\r\n            if (this.admin.password !== this.admin.confirmedPassword) {\r\n                this.errors.password.text = 'Unmatched password'\r\n                this.errors.password.show = true\r\n\r\n                this.errors.confirmedPassword.text = 'Unmatched password'\r\n                this.errors.confirmedPassword.show = true\r\n                isPassed = false\r\n                return isPassed\r\n            }\r\n\r\n            return isPassed\r\n        },\r\n        addAdmin() {\r\n            if (!this.validateBeforeAdd()) {\r\n                return\r\n            }\r\n            this.showConfirmDialog()\r\n        },\r\n        submitAdminInfo() {\r\n            let admin = {}\r\n            if (this.$route.params.id) {\r\n                admin = {\r\n                    id: this.admin.id,\r\n                    name: this.admin.name,\r\n                    email: this.admin.email,\r\n                    password: this.admin.password,\r\n                    type: this.admin.type\r\n                }\r\n\r\n                adminApi.updateAdmin(admin).then(() => {\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: 'Add Successfully'\r\n                    })\r\n                    this.$router.push('/admin/list')\r\n                })\r\n            } else {\r\n                admin = {\r\n                    name: this.admin.name,\r\n                    email: this.admin.email,\r\n                    password: this.admin.password,\r\n                    type: this.admin.type\r\n                }\r\n\r\n                adminApi.addAdmin(admin).then(() => {\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: 'Update Successfully'\r\n                    })\r\n                    this.$router.push('/admin/list')\r\n                })\r\n            }\r\n        },\r\n        showConfirmDialog() {\r\n            let text = this.$route.params.id ? 'Are you sure update this admin?' : 'Are you sure add this admin?'\r\n            this.$confirm(text, 'Confirm', {\r\n                confirmButtonText: 'Confirm',\r\n                cancelButtonText: 'Cancel'\r\n            }).then(() => {\r\n                this.submitAdminInfo()\r\n\r\n            })\r\n        }\r\n    },\r\n    watch: {\r\n        '$route' () {\r\n            this.admin = {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                confirmedPassword: '',\r\n                type: '',\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.add-admin-container {\r\n    padding-top: 80px;\r\n    display: inline-block;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    .row {\r\n        margin-bottom: 25px;\r\n        .title {\r\n            font-size: 14px;\r\n            margin-bottom: 15px;\r\n        }\r\n        .row-input {\r\n            display: inline-block;\r\n            width: 300px;\r\n            position: relative;\r\n        }\r\n        .error-notification {\r\n            display: inline-block;\r\n            color: red;\r\n            margin-left: 20px;\r\n            font-size: 12px;\r\n            position: absolute;\r\n            right: -10px;\r\n            top: 50%;\r\n            transform: translateX(100%) translateY(-50%);\r\n            .el-icon-warning-outline {\r\n                margin-right: 5px;\r\n            }\r\n        }\r\n        .el-select {\r\n            width: 300px;\r\n        }\r\n    }\r\n    .button-wrapper {\r\n        text-align: right;\r\n        .el-icon-delete {\r\n            margin-right: 10px;\r\n            color: #cacaca;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    .reset-password-btn {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n</style>"]}]}